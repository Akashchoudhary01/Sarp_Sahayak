import { CheckCircle, XCircle, AlertTriangle } from 'lucide-react';

const protocolData = {
  cobra: {
    dos: {
      en: [
        'Keep victim calm and still - movement spreads venom',
        'Immobilize the bitten limb below heart level',
        'Remove jewelry and tight clothing immediately',
        'Get to hospital IMMEDIATELY - neurotoxic venom acts fast',
        'Note the time of bite for medical team'
      ],
      hi: [
        'рдкреАрдбрд╝рд┐рдд рдХреЛ рд╢рд╛рдВрдд рдФрд░ рд╕реНрдерд┐рд░ рд░рдЦреЗрдВ - рд╣рд▓рдЪрд▓ рдЬрд╣рд░ рдлреИрд▓рд╛рддреА рд╣реИ',
        'рдХрд╛рдЯреЗ рдЧрдП рдЕрдВрдЧ рдХреЛ рд╣реГрджрдп рдХреЗ рд╕реНрддрд░ рд╕реЗ рдиреАрдЪреЗ рд╕реНрдерд┐рд░ рдХрд░реЗрдВ',
        'рдЧрд╣рдиреЗ рдФрд░ рддрдВрдЧ рдХрдкрдбрд╝реЗ рддреБрд░рдВрдд рд╣рдЯрд╛ рджреЗрдВ',
        'рддреБрд░рдВрдд рдЕрд╕реНрдкрддрд╛рд▓ рдкрд╣реБрдВрдЪреЗрдВ - рдиреНрдпреВрд░реЛрдЯреЙрдХреНрд╕рд┐рдХ рдЬрд╣рд░ рддреЗрдЬреА рд╕реЗ рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ',
        'рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдЯреАрдо рдХреЗ рд▓рд┐рдП рдХрд╛рдЯрдиреЗ рдХрд╛ рд╕рдордп рдиреЛрдЯ рдХрд░реЗрдВ'
      ]
    },
    donts: {
      en: [
        'NO ice, tourniquets, or cutting the wound',
        'NO sucking out venom - it does not work',
        'NO alcohol or caffeine - speeds up venom spread',
        'NO traditional healers - waste of critical time',
        'NO waiting for symptoms - GET TO HOSPITAL NOW'
      ],
      hi: [
        'рдмрд░реНрдл, рдЯреВрд░реНрдирд┐рдХреЗрдЯ, рдпрд╛ рдШрд╛рд╡ рдХрд╛рдЯрдирд╛ рдирд╣реАрдВ',
        'рдЬрд╣рд░ рдЪреВрд╕рдирд╛ рдирд╣реАрдВ - рдпрд╣ рдХрд╛рдо рдирд╣реАрдВ рдХрд░рддрд╛',
        'рд╢рд░рд╛рдм рдпрд╛ рдХреИрдлреАрди рдирд╣реАрдВ - рдЬрд╣рд░ рдлреИрд▓рд╛рд╡ рддреЗрдЬ рдХрд░рддрд╛ рд╣реИ',
        'рдкрд╛рд░рдВрдкрд░рд┐рдХ рдЪрд┐рдХрд┐рддреНрд╕рдХ рдирд╣реАрдВ - рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╕рдордп рдХреА рдмрд░реНрдмрд╛рджреА',
        'рд▓рдХреНрд╖рдгреЛрдВ рдХреА рдкреНрд░рддреАрдХреНрд╖рд╛ рди рдХрд░реЗрдВ - рдЕрднреА рдЕрд╕реНрдкрддрд╛рд▓ рдЬрд╛рдПрдВ'
      ]
    },
    urgency: 'ЁЯЪи CRITICAL: Neurotoxic. Hospital within 1-2 hours.',
    urgencyHi: 'ЁЯЪи рдЧрдВрднреАрд░: рдиреНрдпреВрд░реЛрдЯреЙрдХреНрд╕рд┐рдХред 1-2 рдШрдВрдЯреЗ рдореЗрдВ рдЕрд╕реНрдкрддрд╛рд▓ред'
  },

  // ... keep existing data unchanged for krait, viper, non-venomous, unknown
  // (No TypeScript edits needed here, just leave as is)
};

export default function FirstAidProtocol({ language, snakeType, onNext }) {
  const protocol = protocolData[snakeType];
  const dos = protocol.dos[language];
  const donts = protocol.donts[language];
  const urgency = language === 'en' ? protocol.urgency : protocol.urgencyHi;

  return (
    <div className="px-6 py-8 space-y-6 pb-24">
      <div className="bg-red-600 text-white rounded-lg p-4 text-center">
        <AlertTriangle className="mx-auto mb-2" size={32} />
        <p className="font-bold text-lg">{urgency}</p>
      </div>

      {/* DO'S */}
      <div>
        <h3 className="text-xl font-bold text-green-700 mb-4 flex items-center">
          <CheckCircle className="mr-2" size={28} />
          {language === 'en' ? "тЬЕ DO's (IMMEDIATELY)" : 'тЬЕ рдХреНрдпрд╛ рдХрд░реЗрдВ (рддреБрд░рдВрдд)'}
        </h3>
        <div className="space-y-3">
          {dos.map((item, index) => (
            <div key={index} className="flex items-start bg-green-50 border-l-4 border-green-600 p-4 rounded-r-lg">
              <span className="text-green-700 font-bold mr-3 text-xl min-w-[24px]">{index + 1}</span>
              <span className="text-gray-800 font-semibold leading-relaxed">{item}</span>
            </div>
          ))}
        </div>
      </div>

      {/* DON'TS */}
      <div>
        <h3 className="text-xl font-bold text-red-700 mb-4 flex items-center">
          <XCircle className="mr-2" size={28} />
          {language === 'en' ? "тЭМ DON'Ts (NEVER DO)" : 'тЭМ рдХреНрдпрд╛ рди рдХрд░реЗрдВ (рдХрднреА рдирд╣реАрдВ)'}
        </h3>
        <div className="space-y-3">
          {donts.map((item, index) => (
            <div key={index} className="flex items-start bg-red-50 border-l-4 border-red-600 p-4 rounded-r-lg">
              <span className="text-red-700 font-bold mr-3 text-xl min-w-[24px]">тЬЧ</span>
              <span className="text-gray-800 font-semibold leading-relaxed">{item}</span>
            </div>
          ))}
        </div>
      </div>

      {/* Bottom Button */}
      <div className="fixed bottom-0 left-0 right-0 bg-white border-t-2 border-gray-200 p-4 shadow-lg">
        <button
          onClick={onNext}
          className="w-full bg-red-600 hover:bg-red-700 text-white font-bold py-4 px-6 rounded-lg shadow-lg active:scale-95 transition-transform"
        >
          {language === 'en' ? 'ЁЯПе FIND NEAREST HOSPITAL NOW' : 'ЁЯПе рдирд┐рдХрдЯрддрдо рдЕрд╕реНрдкрддрд╛рд▓ рдЕрднреА рдЦреЛрдЬреЗрдВ'}
        </button>
      </div>
    </div>
  );
}
